package tabs;

import java.util.ArrayList;
import java.util.Collection;

import clock.ClockTemplate;

public class TabsDemo implements Page, INotifyPropertyChanged, PropertyChangeListener {
	<%
	<html>
		<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<title>Lark 页签  Demo</title>
		<style type="text/css">
			tabBox .tabs {
			    margin: 0;
			    padding: 0 10px;
			    overflow: hidden;
			    margin-bottom: -1px;
			    height: 2.25em;
			}
		 
			.tabBox .tabs li {
			    float: left;
			    list-style: none;
			    margin: 0;
			    padding: .25em .25em 0;
			    height: 2em;
			    overflow: hidden;
			    position: relative;
			    z-index: 1;
			    border-bottom: 1px solid #FFF;
			}
		
			.tabBox .tabs li.selected {
			    z-index: 3;
			}
		
			.tabBox .tabs a {
			    float: left;
			    height: 2em;
			    line-height: 2em;
			    border-radius: 8px 8px 0 0;
			    background: #EEE;
			    border: 1px solid #CCC;
			    border-bottom: 0;
			    padding: 0 10px;
			    color: #000;
			    text-decoration: none;
			}
		
			.tabBox .tabs .selected a {
			    background: #FFF;
			    box-shadow: #CCC 0 0 .25em;
			}
		
			.tabBox .tabs a:hover {
			    background: linear-gradient(#EEF, #FFF 70%);
			}
		
			.tabBox .content {
			    clear: left;
			    position: relative;
			    z-index: 2;
			    padding: 2em 1em;
			    border: 1px solid #CCC;
			    background: #FFF;
			    border-radius: 3px;
			    box-shadow: #CCC 0 0 .25em;
			}
		</style>
		
		<link rel="stylesheet" type="text/css" href="../clock/css/clock.css" media="screen, projection" />
		</head>
		<body id="测试">
			<div class="tabBox">
			    <ul class="tabs">
			    	<Iterator items = {Binding property="pages" }>
			    		<TabItemHeader />
			    	</Iterator>
			    </ul>
			    <div class="content" >
			    	<Iterator items = {Binding property="pages" }>
			    		<TabItemContent dataContext = {DataContext property="poem" name="poem" ancestor="current"} />
			    	</Iterator>
			    </div>
			</div>
		
			<p>
			唐诗精选
			</p>
			<div >
				<ClockTemplate />
				<ClockTemplate />
			</div>
		</body>
	</html>
	%>
	public TabsDemo() {
		this._pages = new ArrayList<TabPage>();
		TabPage p = new TabPage("长恨歌", "this is page" + 1, true);
		this._page = p;
		_pages.add(p);
		p.poem = new Poem("白居易", "images/th0.jpg", 
							"汉皇重色思倾国，御宇多年求不得。杨家有女初长成，养在深闺人未识。", 
							"天生丽质难自弃，一朝选在君王侧。回眸一笑百媚生，六宫粉黛无颜色。" ,
							"春寒赐浴华清池，温泉水滑洗凝脂。侍儿扶起娇无力，始是新承恩泽时。" ,
							"云鬓花颜金步摇，芙蓉帐暖度春宵。春宵苦短日高起，从此君王不早朝。");
		p.addPropertyChangeListener("selected1", this::propertyChange);
		p = new TabPage("送元二使安西", "this is page" + 1, false);
		_pages.add(p);
		p.poem = new Poem("王维", "images/th1.jpg", 
							"渭城朝雨浥轻尘，", 
							"客舍青青柳色新。" ,
							"劝君更尽一杯酒， " ,
							"西出阳关无故人。");
		p.addPropertyChangeListener("selected1", this::propertyChange);
		
		p = new TabPage("春夜喜雨", "this is page" + 1, false);
		_pages.add(p); 
		p.poem = new Poem("杜甫", "images/th2.jpg", 
							"好雨知时节，当春乃发生。", 
							"随风潜入夜，润物细无声。" ,
							"野径云俱黑，江船火独明。" ,
							"晓看红湿处，花重锦官城。");
		p.addPropertyChangeListener("selected1", this::propertyChange);
		
		p = new TabPage("黄鹤楼送孟浩然之广陵", "this is page" + 1, false);
		_pages.add(p);
		p.poem = new Poem("李白", "images/th3.jpg", 
							"故 人 西 辞 黄 鹤 楼 ，", 
							"烟 花 三 月 下 扬 州 。" ,
							"孤 帆 远 影 碧 空 尽 ，" ,
							"唯 见 长 江 天 际 流 。");
		p.addPropertyChangeListener("selected1", this::propertyChange);
	}
	
	private Collection<TabPage> _pages;
	public Collection<TabPage> pages {
		&{
			return this._pages;
		}
		+{
			if(this._pages === value){
				return;
			}
			this._pages = value;
			notifyChanged("pages");
		}
	}
	
	private TabPage _page;
	
	PropertyChange onSelectedChanged = (Object source, PropertyChangeEvent evt)->{ 
		if(this._page !== source){
			if(this._page != null){
				_page.selected1 = false;
			}
			this._page = (TabPage) source;
		}
	};
	
	public void propertyChange(Object source, PropertyChangeEvent evt) {
		if("selected1" == evt.property){
			onSelectedChanged(source, evt);
		}
	}
}

